
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
//DataBinding适配kotlin
apply plugin: 'kotlin-kapt'

Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load(inputStream)
android {

    signingConfigs{

        release {
            storeFile file(strFile)
            storePassword properties.getProperty('keyPassword')
            keyAlias = properties.getProperty('keyAlias')
            keyPassword properties.getProperty('keyPassword')
        }
        debug {
            storeFile file(strFile)
            storePassword properties.getProperty('keyPassword')
            keyAlias = properties.getProperty('keyAlias')
            keyPassword properties.getProperty('keyPassword')
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.w.xiaolanlaia"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
        signingConfig signingConfigs.release
    }


    flavorDimensions 'wu'
    productFlavors{
        xiaolanlaia{
            dimension 'wu'
            applicationId "com.w.xiaolanlaia"
            resValue "string","app_name","xiaolanlaia"
            resValue "bool","isrRank",'false'
            buildConfigField "String","ENVIRONMENT",'"xiaolanlaia"'
            manifestPlaceholders = [
                    ENVIRONMENT : "xiaolanlaia",
                    app_name    : "晓懒来啊"

            ]
        }

        niuniu{
            dimension 'wu'
            applicationId "com.w.niuniu"
            resValue "string","app_name","niuniu"
            resValue "bool","isrRank",'false'
            buildConfigField "String","ENVIRONMENT",'"niuniu"'
            manifestPlaceholders = [
                    ENVIRONMENT : "niuniu",
                    app_name    : "牛牛"

            ]
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //开启kotlin协程
    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    dataBinding{
        enabled = true
    }

    android.applicationVariants.all { variant ->

        def buildType = variant.buildType.name
        def fileName
        def createTime = new Date().format("YYYY-MM-dd",TimeZone.getTimeZone("GMT+08:00"))

        variant.outputs.all{
            if(buildType == "release"){
                if (variant.name.contains("xiaolanlaia")){
                    variant.getPackageApplicationProvider().get().outputDirectory = new File(project.rootDir.absolutePath + "/apks/${buildType}/$createTime")
                    fileName = "xiaolanlaia_v${defaultConfig.versionName}_${createTime}_${buildType}.apk"
                    it.outputFileName = fileName
                }else if (variant.name.contains("niuniu")){
                    variant.getPackageApplicationProvider().get().outputDirectory = new File(project.rootDir.absolutePath + "/apks/${buildType}/$createTime")
                    fileName = "niuniu_v${defaultConfig.versionName}_${createTime}_${buildType}.apk"
                    it.outputFileName = fileName
                }
            }
        }


    }
}

kapt{

    generateStubs = true

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-beta2'
    implementation 'com.android.support:design:28.3.1'
    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha02'
    implementation 'com.baoyz.pullrefreshlayout:library:1.2.0'
    implementation 'cn.qqtheme.framework:WheelPicker:1.5.6'
    //lifecycle扩展
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha02'

}
